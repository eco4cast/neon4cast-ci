---
title: "Forecast performance"
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r setup}
library(ggiraph)
library(dplyr)
library(ggplot2)
library(glue)
library(duckdbfs)
source("R/plot-utils.R")
#source("../R/ignore_sigpipes.R")
#ignore_sigpipe()

terrestrial_focal_sites <- c("BART", "OSBS")
aquatics_focal_sites <- c("BARC", "CRAM")
phenology_focal_sites <- c("HARV", "OSBS")
ticks_focal_sites <- c("HARV", "OSBS")
beetles_focal_sites <- c("HARV", "OSBS")
```

This page visualizes the forecasts and forecast performance for the focal target variables.  Only forecasts from a subset of NEON sites are shown.  If you want to see your forecasts or scores, the links can be found in our [forecast catalog](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/forecasts/collection.json) and [scores catalog](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/scores/collection.json)

## Most recent forecasts {#sec-performance}

Only the top-performing models from the last 30 days are shown.

```{r echo = FALSE}
### GET FORECASTS
config <- yaml::read_yaml("../challenge_configuration.yaml")
sites <- readr::read_csv(config$catalog_config$site_metadata_url, show_col_types = FALSE) |> 
  rename(site_id = field_site_id)
```

```{r}

s3_scores_P1D <- duckdbfs::open_dataset(paste0("s3://", config$scores_bucket,"/bundled-parquet/project_id=",  config$project_id,"/duration=P1D/"), s3_endpoint = config$endpoint, anonymous = TRUE)
s3_scores_P1W <- duckdbfs::open_dataset(paste0("s3://", config$scores_bucket,"/bundled-parquet/project_id=",  config$project_id,"/duration=P1W/"), s3_endpoint = config$endpoint, anonymous = TRUE)

df_P1D <- arrow::open_dataset("../forecasts_P1D.parquet") |> collect()
df_P1W <- arrow::open_dataset("../forecasts_P1W.parquet") |> collect()
```

Forecasts submitted on `r max(lubridate::as_date(df_P1D$reference_datetime))`


::: panel-tabset

### Terrestrial: net ecosystem exchange

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Terrestrial/Daily_Net_ecosystem_exchange/collection.json)

```{r}
df_P1D |> 
  filter(variable == "nee",
         #model_id %in% best_models, 
         site_id %in% terrestrial_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Terrestrial: latent heat flux

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Terrestrial/Daily_latent_heat_flux/collection.json)

```{r}
df_P1D |> 
  filter(variable == "le",
         #model_id %in% best_models,
         site_id %in% terrestrial_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```
### Phenology: greenness

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Phenology/Daily_Green_chromatic_coordinate/collection.json)

```{r}
#best_models <- best_P1D_scores |> filter(variable == "gcc_90") |> pull(model_id)

df_P1D |> 
  filter(variable == "gcc_90",
         #model_id %in% best_models, 
         site_id %in% phenology_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```


### Phenology: redness

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Phenology/Daily_Red_chromatic_coordinate/collection.json)

```{r}
df_P1D |> 
  filter(variable == "rcc_90",
         #model_id %in% best_models, 
         site_id %in% phenology_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Aquatics: water temperature

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Aquatics/Daily_Water_temperature/collection.json)

```{r}
df_P1D |> 
  filter(variable == c("temperature"),
         #model_id %in% best_models,
         site_id %in% aquatics_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Aquatics: dissolved oxygen

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Aquatics/Daily_Dissolved_oxygen/collection.json)

```{r}
df_P1D |> 
  filter(variable == c("oxygen"),
         #model_id %in% best_models,
         site_id %in% aquatics_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Aquatics: chlorophyll-a

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Aquatics/Daily_Chlorophyll_a/collection.json)

```{r}
df_P1D |> 
  filter(variable == c("chla"),
         #model_id %in% best_models, 
         site_id %in% aquatics_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()

```

### Beetle community richness

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Beetles/Weekly_beetle_community_richness/collection.json)

```{r}
cut_off <- Sys.time() + days(60)
df_P1W |> 
  filter(variable == c("richness"),
         datetime < cut_off,
         site_id %in% beetles_focal_sites,
         model_id != "tg_arima",
         model_id != "tg_tbats",
         model_id != "tg_ets") |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Beetle community abundance

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Beetles/Weekly_beetle_community_abundance/collection.json)

```{r}
cut_off <- Sys.time() + days(60)
df_P1W |> 
  filter(variable == c("abundance"),
         datetime < cut_off,
         site_id %in% beetles_focal_sites,
         model_id != "tg_arima",
         model_id != "tg_tbats",
         model_id != "tg_ets") |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```


### Ticks: Amblyomma americanum

Forecast summaries are available [here](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/summaries/Ticks/collection.json)

```{r}
df_P1W |> 
  filter(variable == c("amblyomma_americanum"),
         #model_id %in% best_models,
         site_id %in% ticks_focal_sites,
         model_id != "tg_arima",
         model_id != "tg_ets",
         model_id != "tg_tbats",
         model_id != "tg_auto_adam") |>
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

:::

## Forecast Analysis

Below are forecasts submitted 30 days ago and include the observations used to evaluate them. Mouse over to see the team id, and scroll to zoom.  Only the top five performing models are shown. Information on how to access the scores can be found in our [catalog](https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-catalog/main/scores/collection.json)

::: panel-tabset
### Terrestrial: net ecosystem exchange

```{r}
#best_models <- best_P1D_scores |> filter(variable == "nee") |> pull(model_id)

cut_off <- Sys.time() - days(30)
s3_scores_P1D |> 
    filter(variable == "nee",
         site_id %in% terrestrial_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```

### Terrestrial: latent heat flux

```{r}
cut_off <- Sys.time() - days(30)
s3_scores_P1D |> 
    filter(variable == "le",
         site_id %in% terrestrial_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```
### Phenology: greenness

```{r}
cut_off <- Sys.time() - days(30)
s3_scores_P1D |> 
    filter(variable == "gcc_90",
         site_id %in% phenology_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```


### Phenology: redness

```{r}
cut_off <- Sys.time() - days(30)
s3_scores_P1D |> 
    filter(variable == "rcc_90",
         site_id %in% phenology_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```

### Aquatics: water temperature

```{r}
cut_off <- Sys.time() - days(60)
s3_scores_P1D |> 
    filter(variable == "temperature",
         site_id %in% aquatics_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```

### Aquatics: dissolved oxygen

```{r}
cut_off <- Sys.time() - days(60)
s3_scores_P1D |> 
    filter(variable == "oxygen",
         site_id %in% aquatics_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```

### Aquatics: chlorophyll-a

```{r}
cut_off <- Sys.time() - days(60)
s3_scores_P1D |> 
    filter(variable == "chla",
         site_id %in% aquatics_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```

### Beetle community richness

```{r}
cut_off <- Sys.time() - days(365)
s3_scores_P1W |> 
    filter(variable == "richness",
         site_id %in% beetles_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```

### Beetle community abundance

```{r}
cut_off <- Sys.time() - days(365)
s3_scores_P1W |> 
    filter(variable == "abundance",
         site_id %in% beetles_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```


### Ticks: Amblyomma americanum

```{r}
cut_off <- Sys.time() - days(365)
s3_scores_P1W |> 
    filter(variable == "amblyomma_americanum",
         site_id %in% ticks_focal_sites,
         reference_datetime > cut_off) |> 
  slice_min(reference_datetime) |> 
  collect() |> 
  forecast_plots()
```


:::

## Aggregated scores

Average skill scores of each model across all sites.\

Scores are shown by reference date and forecast horizon (in days).\

Scores are averaged across all submissions of the model with a given horizon or a given `reference_datetime` using submissions made since in the last 30 days for the daily or sub-daily variables and the past year for the weekly variables\

Learn about the Continuous Ranked Probability Score [here](https://projects.ecoforecast.org/neon4cast-docs/Evaluation.html)

::: panel-tabset

### Terrestrial: Net Ecosystem Exchange

```{r}
s3_scores_P1D |> 
  filter(variable == "nee",
         !is.na(observation)) |> 
  select(model_id, crps, reference_datetime, datetime) |>
  collect() |> 
  leaderboard_plots("nee")
```

### Terrestrial: Latent Heat Flux

```{r}
s3_scores_P1D |> 
  filter(variable == "le",
         !is.na(observation)) |> 
  select(model_id, crps, reference_datetime, datetime) |>
  collect() |> 
  leaderboard_plots("le")
```
### Phenology: Greenness

```{r}
s3_scores_P1D |> 
  filter(variable == "gcc_90",
         !is.na(observation)) |> 
  select(model_id, crps, reference_datetime, datetime) |>
  collect() |> 
  leaderboard_plots("gcc_90")
```


### Phenology: Redness

```{r}
s3_scores_P1D |> 
  filter(variable == "rcc_90",
         !is.na(observation)) |> 
  select(model_id, crps, reference_datetime, datetime) |>
  collect() |> 
leaderboard_plots("rcc_90")
```

### Aquatics: Water temperature

```{r}
s3_scores_P1D |> 
  filter(variable == "temperature",
         !is.na(observation)) |> 
  select(model_id, crps, reference_datetime, datetime) |>
  collect() |> 
leaderboard_plots("temperature")
```

### Aquatics: Dissolved oxygen

```{r}
s3_scores_P1D |> 
  filter(variable == "oxygen",
         !is.na(observation),
         model_id != "BTW") |> 
  select(-project_id, -family, -sd, -duration, -pub_datetime) |>
  collect() |> 
leaderboard_plots("oxygen")
```

### Aquatics: Chlorophyll-a

```{r}
s3_scores_P1D |> 
  filter(variable == "chla",
         !is.na(observation),
         model_id != "air2waterSat",
         model_id != "tg_arima",
         model_id != "procHinshelwoodSteele",
         model_id != "procEppleyNorbergMonod",
         model_id != "procHinshelwoodMonod",
         model_id != "procEppleyNorbergSteele",
         model_id != "persistenceRW") |> 
  select(-project_id, -family, -sd, -duration, -pub_datetime) |>
  collect() |> 
leaderboard_plots("chla")
```

### Beetle community richness

```{r}
s3_scores_P1W |> 
  filter(variable == "richness",
         !is.na(observation)) |> 
  select(-project_id, -family, -sd, -duration, -pub_datetime) |>
  collect() |> 
leaderboard_plots("richness")
```

### Beetle community abundance

```{r}
s3_scores_P1W |> 
  filter(variable == "abundance",
         !is.na(observation),         
         model_id != "tg_arima",
         model_id != "tg_ets",
         #model_id != "tg_auto_adam",
         model_id != "tg_tbats") |> 
  select(-project_id, -family, -sd, -duration, -pub_datetime) |>
  collect() |> 
leaderboard_plots("abundance")
```


### Ticks: Amblyomma americanum

```{r}
s3_scores_P1W |> 
  filter(variable == "amblyomma_americanum",
         !is.na(observation),
         model_id != "tg_arima",
         model_id != "tg_ets",
         model_id != "tg_auto_adam") |> 
  select(-project_id, -family, -sd, -duration, -pub_datetime) |>
  collect() |> 
leaderboard_plots("amblyomma_americanum")
```

:::
