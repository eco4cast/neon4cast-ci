# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:

name: target-generation

jobs:
  phenology:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_SUBMISSIONS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SUBMISSIONS }}
      OSN_KEY: ${{ secrets.OSN_KEY }}
      OSN_SECRET: ${{ secrets.OSN_SECRET }}
    container: rocker/geospatial:latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate targets
        shell: Rscript {0}
        run: |
          install.packages("RCurl")
          source("targets/phenology_targets.R")

  terrestrial:
    runs-on: arc-runner-eco4cast
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_SUBMISSIONS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SUBMISSIONS }}
      OSN_KEY: ${{ secrets.OSN_KEY }}
      OSN_SECRET: ${{ secrets.OSN_SECRET }}
    container:
      image: eco4cast/rocker-neon4cast:latest
      options: --memory 45g
    steps:
      - uses: actions/checkout@v3

      - name: Generate targets
        shell: Rscript {0}
        run: |
          print(sessionInfo())
          #remotes::install_version("arrow", version = "20.0.0")
          source("targets/terrestrial_targets.R")

  aquatics:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_SUBMISSIONS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SUBMISSIONS }}
      OSN_KEY: ${{ secrets.OSN_KEY }}
      OSN_SECRET: ${{ secrets.OSN_SECRET }}
      NEON_TOKEN: ${{ secrets.NEON_TOKEN }}
      EFI_NRP_KEY: ${{ secrets.EFI_NRP_KEY }}
      EFI_NRP_SECRET: ${{ secrets.EFI_NRP_SECRET }}
    container: eco4cast/rocker-neon4cast:latest
    steps:
      - uses: actions/checkout@v3

      - name: install dependencies
        run: |
          sudo apt-get -y install python3-venv python3-pip python3-dev

      - name: Generate targets
        shell: Rscript {0}
        run: |
          source("targets/aquatics_targets.R")

  beetles:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_SUBMISSIONS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SUBMISSIONS }}
      OSN_KEY: ${{ secrets.OSN_KEY }}
      OSN_SECRET: ${{ secrets.OSN_SECRET }}
      NEON_TOKEN: ${{ secrets.NEON_TOKEN }}
    container: rocker/geospatial:latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate targets
        shell: Rscript {0}
        run: |
          install.packages(c("neonstore","RCurl","duckdbfs","ISOweek", "minioclient"))
          source("targets/beetles_targets.R")

  ticks:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_SUBMISSIONS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SUBMISSIONS }}
      OSN_KEY: ${{ secrets.OSN_KEY }}
      OSN_SECRET: ${{ secrets.OSN_SECRET }}
      NEON_TOKEN: ${{ secrets.NEON_TOKEN }}
    container: rocker/geospatial:latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate targets
        shell: Rscript {0}
        run: |
          install.packages(c("neonstore","RCurl","duckdbfs","ISOweek", "minioclient"))
          source("targets/ticks_targets.R")

  Healthcheck:
    needs: [phenology, beetles, ticks, terrestrial, aquatics]
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    container: eco4cast/rocker-neon4cast:latest
    steps:
      - name: Call Healthcheck
        run: |
          curl -m 10 --retry 5 https://hc-ping.com/95d7869d-538f-4145-9d1e-e6655320066d
